{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _ItemAdapter = require('./ItemAdapter');\n\nvar _ItemAdapter2 = _interopRequireDefault(_ItemAdapter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar ListAdapter = function () {\n  function ListAdapter() {\n    _classCallCheck(this, ListAdapter);\n  }\n\n  _createClass(ListAdapter, [{\n    key: 'receiveProps',\n    value: function receiveProps(props, itemAdapter) {\n      this.props = props;\n      this.itemAdapter = itemAdapter;\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty(list) {\n      return !this.getLength(list);\n    }\n  }, {\n    key: 'filter',\n    value: function filter(list, predicate) {\n      return this.toArray(list).filter(predicate);\n    }\n  }, {\n    key: 'find',\n    value: function find(list, predicate) {\n      return this.toArray(list).find(predicate);\n    }\n  }, {\n    key: 'findMatching',\n    value: function findMatching(list, inputValue) {\n      var _this = this;\n\n      var foldedValue = this.itemAdapter.foldValue(inputValue);\n      return this.find(list, function (item) {\n        return _this.itemAdapter.itemMatchesInput(item, foldedValue);\n      });\n    }\n  }]);\n\n  return ListAdapter;\n}();\n\nexports['default'] = ListAdapter;","map":null,"metadata":{},"sourceType":"script"}